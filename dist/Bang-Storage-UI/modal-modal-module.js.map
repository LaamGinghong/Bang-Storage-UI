{"version":3,"sources":["webpack:///./src/app/pages/components/modal/modal-inner/modal-inner.component.html","webpack:///./src/app/pages/components/modal/modal-inner/modal-inner.component.less","webpack:///./src/app/pages/components/modal/modal-inner/modal-inner.component.ts","webpack:///./src/app/pages/components/modal/modal-routing.module.ts","webpack:///./src/app/pages/components/modal/modal.component.html","webpack:///./src/app/pages/components/modal/modal.component.less","webpack:///./src/app/pages/components/modal/modal.component.ts","webpack:///./src/app/pages/components/modal/modal.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,oD;;;;;;;;;;;ACAA,+DAA+D,2L;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,4IAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;ACPqB;AACJ;AACV;AAEvC,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B,CAAC,CAAC;AAOH;IAAA;IACA,CAAC;IADY,kBAAkB;QAL9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;ACd/B,84H;;;;;;;;;;;ACAA,0BAA0B,iBAAiB,gBAAgB,qBAAqB,wBAAwB,GAAG,kBAAkB,mBAAmB,GAAG,+CAA+C,+1B;;;;;;;;;;;;;;;;;;;;ACAlJ;AACH;AAC2B;AACxE,yFAAyF;AACrC;AAOpD;IAoGE,wBACU,MAAsB,EACtB,UAA+B;QAD/B,WAAM,GAAN,MAAM,CAAgB;QACtB,eAAU,GAAV,UAAU,CAAqB;QApGzC,YAAO,GAAG;YACR,KAAK,EAAE;gBACL,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,i9CA2CP;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,4/CA4CP;aACF;SACF,CAAC;IAMF,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBASC;QARC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC/B,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,sFAAmB;SAC/B,CAAC,CAAC;QACH,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;YACxB,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;YAC5B,8BAA8B;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL;QAAA,iBASC;QARC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC/B,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,sFAAmB;SAC/B,CAAC,CAAC;QACH,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;YACxB,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;YAC5B,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAjIU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,oHAAqC;;SAEtC,CAAC;+EAsGkB,4DAAc;YACV,mEAAmB;OAtG9B,cAAc,CAkI1B;IAAD,qBAAC;CAAA;AAlI0B;;;;;;;;;;;;;;;;;;;;;;;ACXY;AACM;AACI;AACS;AACc;AAChB;AAWxD;IAAA;IACA,CAAC;IADY,WAAW;QATvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,+DAAc,EAAE,sFAAmB,CAAC;YACnD,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,+DAAW;aACZ;YACD,eAAe,EAAE,CAAC,sFAAmB,CAAC;SACvC,CAAC;OACW,WAAW,CACvB;IAAD,kBAAC;CAAA;AADuB","file":"modal-modal-module.js","sourcesContent":["module.exports = \"<p>\\n  modal-inner works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbXBvbmVudHMvbW9kYWwvbW9kYWwtaW5uZXIvbW9kYWwtaW5uZXIuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-inner',\n  templateUrl: './modal-inner.component.html',\n  styleUrls: ['./modal-inner.component.less']\n})\nexport class ModalInnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {ModalComponent} from './modal.component';\r\nimport {NgModule} from '@angular/core';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ModalComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class ModalRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"modal\\\" storage-move-modal>\\n  <h1>Move Modal 可拖动模态框</h1>\\n  <p>拖动模态对话框</p>\\n  <article>\\n    <h2>何时使用</h2>\\n    <p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用<code class=\\\"code\\\">Modal</code>在当前页面正中打开一个浮层，承载相应的操作。</p>\\n    <p>由于NG-ZORRO只是基于Angular版本的Ant-design，并没有添加模态框拖动的功能，但是实际业务中需要拖动模态框。</p>\\n    <p>在此基础上，通过添加指令操作<code class=\\\"code\\\">DOM</code>元素来实现模态框的拖动功能。</p>\\n  </article>\\n  <article>\\n    <h2>如何使用</h2>\\n    <p>推荐使用加载Component的方式弹出Modal框，这样弹出层的Component逻辑可以与外层Component完全隔离，并且做到可以随时复用，</p>\\n    <p>在弹出层Component中可以通过依赖注入<code class=\\\"code\\\">NzModalRef</code>方式直接获取模态框的组件实例，用于控制在弹出层组件中控制模态框行为。</p>\\n    <p>因此你只需在当前页面中任意位置添加<code class=\\\"code\\\">storage-move-modal</code>指令，在Modal框生成之后调用初始化函数即可实现拖动功能。</p>\\n  </article>\\n  <article>\\n    <h2>代码演示</h2>\\n    <div nz-row nzGutter=\\\"16\\\">\\n      <div nz-col nzSpan=\\\"12\\\">\\n        <div class=\\\"code-box\\\">\\n          <div class=\\\"code-box-demo\\\">\\n            <button storage-button storageType=\\\"primary\\\" (click)=\\\"open1()\\\">Show Modal</button>\\n          </div>\\n          <div class=\\\"code-box-description\\\">\\n            <p>拖动模态框。</p>\\n            <span class=\\\"code-box-description-title\\\">拖动模态框</span>\\n            <span\\n              nz-tooltip\\n              [nzTitle]=\\\"'Hide Code'\\\"\\n              class=\\\"code-box-description-icon\\\"\\n              *ngIf=\\\"codeBox.first.show\\\"\\n              (click)=\\\"codeBox.first.show=!codeBox.first.show\\\"\\n            >\\n              <img alt=\\\"expand code\\\"\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\n            </span>\\n            <span\\n              nz-tooltip\\n              [nzTitle]=\\\"'Show Code'\\\"\\n              class=\\\"code-box-description-icon\\\"\\n              *ngIf=\\\"!codeBox.first.show\\\"\\n              (click)=\\\"codeBox.first.show=!codeBox.first.show\\\"\\n            >\\n              <img alt=\\\"expand code\\\"\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\n            </span>\\n          </div>\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.first.show\\\">\\n            <pre><code [highlight]=\\\"codeBox.first.source\\\"></code></pre>\\n          </div>\\n        </div>\\n      </div>\\n      <div nz-col nzSpan=\\\"12\\\">\\n        <div class=\\\"code-box\\\">\\n          <div class=\\\"code-box-demo\\\">\\n            <button storage-button storageType=\\\"primary\\\" (click)=\\\"open2()\\\">Show Modal</button>\\n          </div>\\n          <div class=\\\"code-box-description\\\">\\n            <p>拖动模态框。</p>\\n            <span class=\\\"code-box-description-title\\\">拖动模态框</span>\\n            <span\\n              nz-tooltip\\n              [nzTitle]=\\\"'Hide Code'\\\"\\n              class=\\\"code-box-description-icon\\\"\\n              *ngIf=\\\"codeBox.second.show\\\"\\n              (click)=\\\"codeBox.second.show=!codeBox.second.show\\\"\\n            >\\n              <img alt=\\\"expand code\\\"\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\n            </span>\\n            <span\\n              nz-tooltip\\n              [nzTitle]=\\\"'Show Code'\\\"\\n              class=\\\"code-box-description-icon\\\"\\n              *ngIf=\\\"!codeBox.second.show\\\"\\n              (click)=\\\"codeBox.second.show=!codeBox.second.show\\\"\\n            >\\n              <img alt=\\\"expand code\\\"\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\n            </span>\\n          </div>\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.second.show\\\">\\n            <pre><code [highlight]=\\\"codeBox.second.source\\\"></code></pre>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </article>\\n  <article>\\n    <h2>API</h2>\\n    <p><span class=\\\"api-title\\\">StorageModalService</span><span class=\\\"api-default service\\\">Service</span></p>\\n    <p>由于采用服务动态创建模态框，因此模态框组件并没有挂载在当前组件中，而是与根组件平级，所以无法直接在组件中获取模态框DOM节点。</p>\\n    <p>因此，我们通过在组件中注入指令全局监听事件，</p>\\n  </article>\\n</div>\\n\"","module.exports = \".modal {\\n  height: 100%;\\n  width: 100%;\\n  overflow-y: auto;\\n  padding-right: 10px;\\n}\\n.modal article {\\n  margin: 40px 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29tcG9uZW50cy9tb2RhbC9EOi9wcm9qZWN0cy9CYW5nLVN0b3JhZ2UtVUkvc3JjL2FwcC9wYWdlcy9jb21wb25lbnRzL21vZGFsL21vZGFsLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9wYWdlcy9jb21wb25lbnRzL21vZGFsL21vZGFsLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FDQ0Y7QURMQTtFQU9JLGNBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbXBvbmVudHMvbW9kYWwvbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuXG4gIGFydGljbGUge1xuICAgIG1hcmdpbjogNDBweCAwO1xuICB9XG59XG4iLCIubW9kYWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xufVxuLm1vZGFsIGFydGljbGUge1xuICBtYXJnaW46IDQwcHggMDtcbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {NzModalService} from 'ng-zorro-antd';\r\nimport {ModalInnerComponent} from './modal-inner/modal-inner.component';\r\n// import {StorageModalService} from '../../../../component/modal/storage-modal.service';\r\nimport {StorageModalService} from 'bang-storage-ui';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.less']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  codeBox = {\r\n    first: {\r\n      show: false,\r\n      source: `\r\n      import { NgModule, Component } from '@angular/core';\r\n      import { CommonModule } from '@angular/common';\r\n      import { NgZorroAntdModule, NzModalService } from 'ng-zorro-antd';\r\n      import { BangStorageUIModule, StorageModalService } from 'bang-storage-ui';\r\n      import { ModalInnerComponent } from './modal-inner-modal-inner.component';\r\n\r\n      @Component({\r\n        selector: 'storage-move-modal-demo',\r\n        template: \\`\r\n                      <div storage-move-modal>\r\n                         <button storage-button storageType=\"primary\" (click)=\"open()\">Show Modal</button>\r\n                      </div>\r\n                  \\`\r\n      })\r\n\r\n      export class StorageMoveModalDemoComponent{\r\n\r\n         constructor(\r\n                    private _modal: NzModalService,\r\n                    private _moveModal: StorageModalService\r\n                    ) {\r\n                      }\r\n\r\n        open(): void{\r\n          const modal = this._modal.create({\r\n             nzTitle: 'Title',\r\n             nzContent: ModalInnerComponent\r\n          });\r\n          modal.afterOpen.subscribe(() => {\r\n            this._moveModal.initModal();\r\n          })\r\n        }\r\n      }\r\n\r\n      @NgModule({\r\n        import: [ CommonModule, NgZorroAntdModule, BangStorageUIModule],\r\n        declarations: [StorageMoveModalDemoComponent, ModalInnerComponent],\r\n        entryComponents: [ModalInnerComponent]\r\n      })\r\n\r\n      export class StorageMoveModalDemoModule{\r\n      }\r\n      `\r\n    },\r\n    second: {\r\n      show: false,\r\n      source: `\r\n      import { NgModule, Component } from '@angular/core';\r\n      import { CommonModule } from '@angular/common';\r\n      import { NgZorroAntdModule, NzModalService } from 'ng-zorro-antd';\r\n      import { BangStorageUIModule, StorageModalService } from 'bang-storage-ui';\r\n      import { ModalInnerComponent } from './modal-inner-modal-inner.component';\r\n\r\n      @Component({\r\n        selector: 'storage-zoom-modal-demo',\r\n        template: \\`\r\n                      <div storage-move-modal>\r\n                         <button storage-button storageType=\"primary\" (click)=\"open()\">Show Modal</button>\r\n                      </div>\r\n                  \\`\r\n      })\r\n\r\n      export class StorageZoomModalDemoComponent{\r\n\r\n         constructor(\r\n                    private _modal: NzModalService,\r\n                    private _moveModal: StorageModalService\r\n                    ) {\r\n                      }\r\n\r\n        open(): void{\r\n          const modal = this._modal.create({\r\n             nzTitle: 'Title',\r\n             nzContent: ModalInnerComponent\r\n          });\r\n          modal.afterOpen.subscribe(() => {\r\n             this._moveModal.initModal();\r\n             this._moveModal.initZoom();\r\n          })\r\n        }\r\n      }\r\n\r\n      @NgModule({\r\n        import: [ CommonModule, NgZorroAntdModule, BangStorageUIModule],\r\n        declarations: [StorageZoomModalDemoComponent, ModalInnerComponent],\r\n        entryComponents: [ModalInnerComponent]\r\n      })\r\n\r\n      export class StorageZoomModalDemoModule{\r\n      }\r\n      `\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private _modal: NzModalService,\r\n    private _moveModal: StorageModalService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  open1(): void {\r\n    const modal = this._modal.create({\r\n      nzTitle: 'Title',\r\n      nzContent: ModalInnerComponent\r\n    });\r\n    modal.afterOpen.subscribe(() => {\r\n      this._moveModal.initModal();\r\n      // this._moveModal.initZoom();\r\n    });\r\n  }\r\n\r\n  open2(): void {\r\n    const modal = this._modal.create({\r\n      nzTitle: 'Title',\r\n      nzContent: ModalInnerComponent\r\n    });\r\n    modal.afterOpen.subscribe(() => {\r\n      this._moveModal.initModal();\r\n      this._moveModal.initZoom();\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ModalComponent} from './modal.component';\nimport {ModalRoutingModule} from './modal-routing.module';\nimport {ModalInnerComponent} from './modal-inner/modal-inner.component';\nimport {ShareModule} from '../../../share/share.module';\n\n@NgModule({\n  declarations: [ModalComponent, ModalInnerComponent],\n  imports: [\n    CommonModule,\n    ModalRoutingModule,\n    ShareModule\n  ],\n  entryComponents: [ModalInnerComponent]\n})\nexport class ModalModule {\n}\n"],"sourceRoot":""}