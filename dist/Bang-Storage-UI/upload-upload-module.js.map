{"version":3,"sources":["webpack:///./src/app/pages/components/upload/upload-routing.module.ts","webpack:///./src/app/pages/components/upload/upload.component.html","webpack:///./src/app/pages/components/upload/upload.component.less","webpack:///./src/app/pages/components/upload/upload.component.ts","webpack:///./src/app/pages/components/upload/upload.module.ts","webpack:///./src/app/pages/components/upload/upload.service.ts"],"names":[],"mappings":"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","file":"upload-upload-module.js","sourcesContent":["import {RouterModule, Routes} from '@angular/router';\r\nimport {UploadComponent} from './upload.component';\r\nimport {NgModule} from '@angular/core';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: UploadComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UploadRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"upload\\\">\\r\\n  <h1>Upload 上传</h1>\\r\\n  <p>文件选择上传及文件批量上传控件。</p>\\r\\n  <article>\\r\\n    <h2 id=\\\"use\\\">何时使用</h2>\\r\\n    <p>上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程。</p>\\r\\n  </article>\\r\\n  <article>\\r\\n    <h2 id=\\\"warning\\\">注意事项</h2>\\r\\n    <p style=\\\"line-height: 2em\\\"><code class=\\\"code\\\">BangStorageUI</code>认为，文件上传的上传行为应该归属于当前操作的组件本身而非<code class=\\\"code\\\">StorageUpload</code>组件，因此，<code class=\\\"code\\\">StorageUpload</code>组件并没有整合上传行为的逻辑，而是希望开发者在使用过程中自行在组件中添加行为，避免在HTML中过多地书写JS代码，从而增加代码的耦合度。</p>\\r\\n  </article>\\r\\n  <article>\\r\\n    <h2 id=\\\"example\\\">代码演示</h2>\\r\\n    <div nz-row nzGutter=\\\"16\\\">\\r\\n      <div nz-col nzSpan=\\\"12\\\">\\r\\n        <div class=\\\"code-box\\\">\\r\\n          <div class=\\\"code-box-demo\\\">\\r\\n            <storage-upload (storageLastFileChange)=\\\"singleUpload($event)\\\"></storage-upload>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-description\\\">\\r\\n            <p>经典款式，用户点击按钮弹出文件选择框！</p>\\r\\n            <span class=\\\"code-box-description-title\\\">点击上传</span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Hide Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"codeBox.first.show\\\"\\r\\n              (click)=\\\"codeBox.first.show=!codeBox.first.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\r\\n            </span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Show Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"!codeBox.first.show\\\"\\r\\n              (click)=\\\"codeBox.first.show=!codeBox.first.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.first.show\\\">\\r\\n            <pre><code [highlight]=\\\"codeBox.first.source\\\"></code></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"code-box\\\">\\r\\n          <div class=\\\"code-box-demo\\\">\\r\\n            <storage-upload [(storageFileList)]=\\\"codeBox.third.value\\\"></storage-upload>\\r\\n            <ul style=\\\"margin-top: 20px;list-style: circle\\\">\\r\\n              <li style=\\\"margin: 10px 0;\\\" *ngFor=\\\"let item of codeBox.third.value;let index=index\\\">\\r\\n                <span>{{item.name}}</span>\\r\\n                <span style=\\\"float: right;cursor: pointer\\\" (click)=\\\"codeBox.third.value.splice(index,1)\\\">\\r\\n                  <i nz-icon type=\\\"close\\\" theme=\\\"outline\\\"></i>\\r\\n                </span>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button storage-button storageType=\\\"primary\\\" (click)=\\\"multipleUpload(codeBox.third.value)\\\">上传</button>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-description\\\">\\r\\n            <p>使用<code class=\\\"code\\\">storageFileList</code>双向绑定已选择的文件列表。</p>\\r\\n            <span class=\\\"code-box-description-title\\\">获取选择上传列表</span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Hide Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"codeBox.third.show\\\"\\r\\n              (click)=\\\"codeBox.third.show=!codeBox.third.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\r\\n            </span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Show Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"!codeBox.third.show\\\"\\r\\n              (click)=\\\"codeBox.third.show=!codeBox.third.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.third.show\\\">\\r\\n            <pre><code [highlight]=\\\"codeBox.third.source\\\"></code></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"code-box\\\">\\r\\n          <div class=\\\"code-box-demo\\\">\\r\\n            <nz-select [(ngModel)]=\\\"codeBox.fifth.type\\\" style=\\\"width: 120px\\\" nzAllowClear>\\r\\n              <nz-option nzLabel=\\\"image/jpeg\\\" nzValue=\\\"image/jpeg\\\"></nz-option>\\r\\n              <nz-option nzLabel=\\\"image/png\\\" nzValue=\\\"image/png\\\"></nz-option>\\r\\n            </nz-select>\\r\\n            <br><br>\\r\\n            <storage-input-number [(storageValue)]=\\\"codeBox.fifth.size\\\"></storage-input-number>KB\\r\\n            <br><br>\\r\\n            <storage-upload [storageType]=\\\"codeBox.fifth.type\\\" [storageSize]=\\\"codeBox.fifth.size\\\"></storage-upload>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-description\\\">\\r\\n            <p>设置<code class=\\\"code\\\">storageType</code>，可以约束选择上传文件的类型，不传默认所有类型。</p>\\r\\n            <p>设置<code class=\\\"code\\\">storageSize</code>，可以约束选择上传文件的大小，单位为<code class=\\\"code\\\">KB</code>。</p>\\r\\n            <span class=\\\"code-box-description-title\\\">类型与大小</span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Hide Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"codeBox.fifth.show\\\"\\r\\n              (click)=\\\"codeBox.fifth.show=!codeBox.fifth.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\r\\n            </span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Show Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"!codeBox.fifth.show\\\"\\r\\n              (click)=\\\"codeBox.fifth.show=!codeBox.fifth.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.fifth.show\\\">\\r\\n            <pre><code [highlight]=\\\"codeBox.fifth.source\\\"></code></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div nz-col nzSpan=\\\"12\\\">\\r\\n        <div class=\\\"code-box\\\">\\r\\n          <div class=\\\"code-box-demo\\\">\\r\\n            <storage-upload [storageTemplate]=\\\"customUploadTemplate\\\" (storageLastFileChange)=\\\"singleUpload($event)\\\">\\r\\n              <ng-template #customUploadTemplate>\\r\\n                <div id=\\\"customUploadTemplate\\\">+</div>\\r\\n              </ng-template>\\r\\n            </storage-upload>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-description\\\">\\r\\n            <p>自定义上传组件样式，传入<code class=\\\"code\\\">storageTemplate</code>。</p>\\r\\n            <span class=\\\"code-box-description-title\\\">自定义样式</span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Hide Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"codeBox.second.show\\\"\\r\\n              (click)=\\\"codeBox.second.show=!codeBox.second.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\r\\n            </span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Show Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"!codeBox.second.show\\\"\\r\\n              (click)=\\\"codeBox.second.show=!codeBox.second.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.second.show\\\">\\r\\n            <pre><code [highlight]=\\\"codeBox.second.source\\\"></code></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"code-box\\\">\\r\\n          <div class=\\\"code-box-demo\\\">\\r\\n            <storage-input-number [(storageValue)]=\\\"codeBox.forth.number\\\"></storage-input-number>\\r\\n            <br><br>\\r\\n            <storage-upload\\r\\n              [(storageFileList)]=\\\"codeBox.forth.value\\\"\\r\\n              [storageLimited]=\\\"codeBox.forth.number\\\"\\r\\n              storageMultiple\\r\\n            ></storage-upload>\\r\\n            <ul style=\\\"margin-top: 20px;list-style: circle\\\">\\r\\n              <li style=\\\"margin: 10px 0;\\\" *ngFor=\\\"let item of codeBox.forth.value;let index=index\\\">\\r\\n                <span>{{item.name}}</span>\\r\\n                <span style=\\\"float: right;cursor: pointer\\\" (click)=\\\"codeBox.forth.value.splice(index,1)\\\">\\r\\n                  <i nz-icon type=\\\"close\\\" theme=\\\"outline\\\"></i>\\r\\n                </span>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button storage-button storageType=\\\"primary\\\" (click)=\\\"multipleUpload(codeBox.forth.value)\\\">上传</button>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-description\\\">\\r\\n            <p>设置<code class=\\\"code\\\">storageMultiple</code>，按住<code class=\\\"code\\\">CTRL</code>键可以多选上传。</p>\\r\\n            <p>设置<code class=\\\"code\\\">storageLimited</code>，可以限制上传文件的数量。</p>\\r\\n            <span class=\\\"code-box-description-title\\\">多选及限制数量</span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Hide Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"codeBox.forth.show\\\"\\r\\n              (click)=\\\"codeBox.forth.show=!codeBox.forth.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\\\">\\r\\n            </span>\\r\\n            <span\\r\\n              nz-tooltip\\r\\n              [nzTitle]=\\\"'Show Code'\\\"\\r\\n              class=\\\"code-box-description-icon\\\"\\r\\n              *ngIf=\\\"!codeBox.forth.show\\\"\\r\\n              (click)=\\\"codeBox.forth.show=!codeBox.forth.show\\\"\\r\\n            >\\r\\n              <img alt=\\\"expand code\\\"\\r\\n                   src=\\\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"code-box-code\\\" [hidden]=\\\"!codeBox.forth.show\\\">\\r\\n            <pre><code [highlight]=\\\"codeBox.forth.source\\\"></code></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </article>\\r\\n  <article>\\r\\n    <h2 id=\\\"api\\\">API</h2>\\r\\n    <p><span class=\\\"api-title\\\">storage-upload</span><span class=\\\"api-default component\\\">Component</span></p>\\r\\n    <nz-table\\r\\n      #nzTable\\r\\n      [nzData]=\\\"tableData\\\"\\r\\n      [nzFrontPagination]=\\\"false\\\"\\r\\n      [nzShowPagination]=\\\"false\\\"\\r\\n    >\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th>属性</th>\\r\\n        <th>说明</th>\\r\\n        <th>类型</th>\\r\\n        <th>默认值</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let item of nzTable.data\\\">\\r\\n        <td><code class=\\\"code\\\">{{item.name}}</code></td>\\r\\n        <td [innerHTML]=\\\"item.description\\\"></td>\\r\\n        <td><span class=\\\"table-type\\\">{{item.type}}</span></td>\\r\\n        <td>{{item.default}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </nz-table>\\r\\n  </article>\\r\\n</div>\\r\\n\"","module.exports = \".upload {\\n  height: 100%;\\n  width: 100%;\\n  overflow-y: auto;\\n  padding-right: 10px;\\n}\\n.upload article {\\n  margin: 40px 0;\\n}\\n#customUploadTemplate {\\n  width: 200px;\\n  height: 200px;\\n  border-radius: 10px;\\n  background: white;\\n  text-align: center;\\n  line-height: 200px;\\n  font-size: 90px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29tcG9uZW50cy91cGxvYWQvRDovcHJvamVjdHMvQmFuZy1TdG9yYWdlLVVJL3NyYy9hcHAvcGFnZXMvY29tcG9uZW50cy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9wYWdlcy9jb21wb25lbnRzL3VwbG9hZC91cGxvYWQuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUNDRjtBRExBO0VBT0ksY0FBQTtBQ0NKO0FER0E7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLDJDQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jb21wb25lbnRzL3VwbG9hZC91cGxvYWQuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBsb2FkIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgcGFkZGluZy1yaWdodDogMTBweDtcblxuICBhcnRpY2xlIHtcbiAgICBtYXJnaW46IDQwcHggMDtcbiAgfVxufVxuXG4jY3VzdG9tVXBsb2FkVGVtcGxhdGUge1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogMjAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAyMDBweDtcbiAgZm9udC1zaXplOiA5MHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xufVxuIiwiLnVwbG9hZCB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG4udXBsb2FkIGFydGljbGUge1xuICBtYXJnaW46IDQwcHggMDtcbn1cbiNjdXN0b21VcGxvYWRUZW1wbGF0ZSB7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDIwMHB4O1xuICBmb250LXNpemU6IDkwcHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {UploadService} from './upload.service';\r\nimport {StorageUploadFile} from 'bang-storage-ui';\r\n// import {StorageUploadFile} from '../../../../component/upload/storage-upload-file';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.less'],\r\n  providers: [UploadService]\r\n})\r\nexport class UploadComponent implements OnInit {\r\n  codeBox = {\r\n    first: {\r\n      show: false,\r\n      source: `\r\n      import { Component } from '@angular/core';\r\n      import { StorageUploadFile } from 'bang-storage-ui';\r\n      import {Injectable} from '@angular/core';\r\n      import {HttpClient} from '@angular/common/http';\r\n      import {Observable} from 'rxjs';\r\n\r\n      @Component({\r\n        selector: 'storage-upload-demo',\r\n        template: \\`\r\n                    <storage-upload (storageLastFileChange)=\"beforeUpload($event)\"></storage-upload>\r\n                  \\`,\r\n        providers: [UploadService]\r\n      })\r\n\r\n      export class StorageUploadDemoComponent{\r\n\r\n        constructor(\r\n                    private _uploadService: UploadService\r\n                   ){\r\n        }\r\n\r\n        upload(e: StorageUploadFile): void{\r\n          const form = new FormData();\r\n          form.append('file', e);\r\n          this._uploadService.upload(form).subscribe(result => {\r\n          });\r\n        }\r\n      }\r\n\r\n      @Injectable()\r\n\r\n      export class UploadService{\r\n\r\n        constructor(\r\n                    private _http: HttpClient\r\n                   ){\r\n        }\r\n\r\n        upload(value: any): Observable<any> {\r\n          return this._http.post('https://jsonplaceholder.typicode.com/posts', value);\r\n        }\r\n      }\r\n      `\r\n    },\r\n    second: {\r\n      show: false,\r\n      source: `\r\n      import { Component } from '@angular/core';\r\n      import { StorageUploadFile } from 'bang-storage-ui';\r\n      import {Injectable} from '@angular/core';\r\n      import {HttpClient} from '@angular/common/http';\r\n      import {Observable} from 'rxjs';\r\n\r\n      @Component({\r\n        selector: 'storage-upload-demo',\r\n        template: \\`\r\n                    <storage-upload [storageTemplate]=\"customUploadTemplate\" (storageLastFileChange)=\"beforeUpload($event)\">\r\n                      <ng-template #customUploadTemplate>\r\n                        <div id=\"customUploadTemplate\">+</div>\r\n                      </ng-template>\r\n                    </storage-upload>\r\n                  \\`,\r\n        providers: [UploadService],\r\n        styles:[\\`\r\n                  #customUploadTemplate {\r\n                    width: 200px;\r\n                    height: 200px;\r\n                    border-radius: 10px;\r\n                    background: white;\r\n                    text-align: center;\r\n                    line-height: 200px;\r\n                    font-size: 90px;\r\n                    font-weight: bold;\r\n                    cursor: pointer;\r\n                    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4);\r\n                  }\r\n                \\`]\r\n      })\r\n\r\n      export class StorageUploadDemoComponent{\r\n\r\n        constructor(\r\n                    private _uploadService: UploadService\r\n                   ){\r\n        }\r\n\r\n        upload(e: StorageUploadFile): void{\r\n          const form = new FormData();\r\n          form.append('file', e);\r\n          this._uploadService.upload(form).subscribe(result => {\r\n          });\r\n        }\r\n      }\r\n\r\n      @Injectable()\r\n\r\n      export class UploadService{\r\n\r\n        constructor(\r\n                    private _http: HttpClient\r\n                   ){\r\n        }\r\n\r\n        upload(value: any): Observable<any> {\r\n          return this._http.post('https://jsonplaceholder.typicode.com/posts', value);\r\n        }\r\n      }`\r\n    },\r\n    third: {\r\n      show: false,\r\n      value: [] as Array<StorageUploadFile>,\r\n      source: `\r\n      import {Component} from '@angular/core';\r\n      import {StorageUploadFile} from 'bang-storage-ui';\r\n      import {Injectable} from '@angular/core';\r\n      import {HttpClient} from '@angular/common/http';\r\n      import {Observable} from 'rxjs';\r\n\r\n      @Component({\r\n        selector: 'storage-upload-demo',\r\n        template: \\`\r\n                    <storage-upload [(storageFileList)]=\"fileList\"></storage-upload>\r\n                    <ul style=\"margin-top: 20px;list-style: circle\">\r\n                      <li style=\"margin: 10px 0;\" *ngFor=\"let item of fileList;let index=index\">\r\n                        <span>{{item.name}}</span>\r\n                        <span style=\"float: right;cursor: pointer\" (click)=\"fileList.splice(index,1)\">\r\n                          <i nz-icon type=\"close\" theme=\"outline\"></i>\r\n                        </span>\r\n                      </li>\r\n                    </ul>\r\n                    <button storage-button storageType=\"primary\" (click)=\"upload()\">上传</button>\r\n                  \\`,\r\n        providers: [UploadService]\r\n      })\r\n\r\n      export class StorageUploadDemoComponent{\r\n\r\n        fileList: Array<StorageUploadFile> = [];\r\n\r\n        constructor(\r\n                    private _uploadService: UploadService\r\n                   ){\r\n        }\r\n\r\n        upload(): void{\r\n          const form = new FormData();\r\n          fileList.forEach((item,index) => {\r\n            form.append('file' + index, item);\r\n          });\r\n          this._uploadService.upload(form).subscribe(result => {\r\n          });\r\n        }\r\n      }\r\n\r\n      @Injectable()\r\n\r\n      export class UploadService{\r\n\r\n        constructor(\r\n                    private _http: HttpClient\r\n                   ){\r\n        }\r\n\r\n        upload(value: any): Observable<any> {\r\n          return this._http.post('https://jsonplaceholder.typicode.com/posts', value);\r\n        }\r\n      }`\r\n    },\r\n    forth: {\r\n      show: false,\r\n      number: 2,\r\n      value: [] as StorageUploadFile[],\r\n      source: `\r\n      import {Component} from '@angular/core';\r\n      import {StorageUploadFile} from 'bang-storage-ui';\r\n      import {Injectable} from '@angular/core';\r\n      import {HttpClient} from '@angular/common/http';\r\n      import {Observable} from 'rxjs';\r\n\r\n      @Component({\r\n        selector: 'storage-upload-demo',\r\n        template: \\`\r\n                    <storage-input-number [(storageValue)]=\"limited\"></storage-input-number>\r\n                    <br><br>\r\n                    <storage-upload [(storageFileList)]=\"fileList\" storageMultiple [storageLimited]=\"limited\"></storage-upload>\r\n                    <ul style=\"margin-top: 20px;list-style: circle\">\r\n                      <li style=\"margin: 10px 0;\" *ngFor=\"let item of fileList;let index=index\">\r\n                        <span>{{item.name}}</span>\r\n                        <span style=\"float: right;cursor: pointer\" (click)=\"fileList.splice(index,1)\">\r\n                          <i nz-icon type=\"close\" theme=\"outline\"></i>\r\n                        </span>\r\n                      </li>\r\n                    </ul>\r\n                    <button storage-button storageType=\"primary\" (click)=\"upload()\">上传</button>\r\n                  \\`,\r\n        providers: [UploadService]\r\n      })\r\n\r\n      export class StorageUploadDemoComponent{\r\n\r\n        limited = 2;\r\n        fileList: Array<StorageUploadFile> = [];\r\n\r\n        constructor(\r\n                    private _uploadService: UploadService\r\n                   ){\r\n        }\r\n\r\n        upload(): void{\r\n          const form = new FormData();\r\n          fileList.forEach((item,index) => {\r\n            form.append('file' + index, item);\r\n          });\r\n          this._uploadService.upload(form).subscribe(result => {\r\n          });\r\n        }\r\n      }\r\n\r\n      @Injectable()\r\n\r\n      export class UploadService{\r\n\r\n        constructor(\r\n                    private _http: HttpClient\r\n                   ){\r\n        }\r\n\r\n        upload(value: any): Observable<any> {\r\n          return this._http.post('https://jsonplaceholder.typicode.com/posts', value);\r\n        }\r\n      }`\r\n    },\r\n    fifth: {\r\n      show: false,\r\n      type: null,\r\n      size: 1024,\r\n      source: `\r\n      import {Component} from '@angular/core';\r\n      import {StorageUploadType} from 'bang-storage-ui';\r\n\r\n      @Component({\r\n        selector: 'storage-upload-demo',\r\n        template: \\`\r\n                    <nz-select [(ngModel)]=\"type\" style=\"width: 120px\" nzAllowClear>\r\n                      <nz-option nzLabel=\"image/jpeg\" nzValue=\"image/jpeg\"></nz-option>\r\n                      <nz-option nzLabel=\"image/png\" nzValue=\"image/png\"></nz-option>\r\n                    </nz-select>\r\n                    <br><br>\r\n                    <storage-input-number [(storageValue)]=\"size\"></storage-input-number>KB\r\n                    <br><br>\r\n                    <storage-upload [storageType]=\"type\" [storageSize]=\"size\"></storage-upload>\r\n                  \\`\r\n      })\r\n\r\n      export class StorageUploadDemoComponent{\r\n        type: StorageUploadType = null;\r\n        size = 1024;\r\n      }\r\n      `\r\n    }\r\n  };\r\n\r\n  tableData = [\r\n    {name: '[storageTemplate]', description: '自定义上传按钮', type: 'TemplateRef<void>', default: '-'},\r\n    {name: '[storageFileList]', description: '已选择上传文件列表，可双向绑定', type: 'Array<StorageUploadFile>', default: '[]'},\r\n    {name: '[storageMultiple]', description: '是否支持多选,开启后按住ctrl可选择多个文件', type: 'boolean', default: 'false'},\r\n    {name: '[storageDisabled]', description: '禁用上传按钮', type: 'boolean', default: 'false'},\r\n    {name: '[storageLimited]', description: '限制上传文件的数量', type: 'number', default: '-'},\r\n    {name: '[storageSize]', description: '限制上传文件的大小，单位为KB', type: 'number', default: '0'},\r\n    {name: '[storageType]', description: '限制上传文件的类型，不填为任意类型，可选类型为：image/jpeg、image/png、image/gif、image/bmp', type: 'StorageUploadType', default: '-'},\r\n    {name: '(storageFileListChange)', description: '上传文件列表发生改变', type: 'EventEmitter', default: '-'},\r\n    {name: '(storageLastFileChange)', description: '当前选择上传的文件发生改变，单选有效', type: 'EventEmitter', default: '-'}\r\n  ];\r\n\r\n  constructor(\r\n    private _uploadService: UploadService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  singleUpload(e: StorageUploadFile): void {\r\n    const form = new FormData();\r\n    form.append('file', e);\r\n    this._uploadService.upload(form).subscribe(result => {\r\n    });\r\n  }\r\n\r\n  multipleUpload(e: StorageUploadFile[]): void {\r\n    const form = new FormData();\r\n    e.forEach((item, index: number) => {\r\n      form.append(`file${index}`, item);\r\n    });\r\n    this._uploadService.upload(form).subscribe(result => {\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {UploadComponent} from './upload.component';\r\nimport {UploadRoutingModule} from './upload-routing.module';\r\nimport {ShareModule} from '../../../share/share.module';\r\n\r\n@NgModule({\r\n  declarations: [UploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UploadRoutingModule,\r\n    ShareModule\r\n  ]\r\n})\r\nexport class UploadModule {\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\n\nexport class UploadService {\n\n  constructor(\n    private _http: HttpClient\n  ) {\n  }\n\n  upload(value: any): Observable<any> {\n    return this._http.post('https://jsonplaceholder.typicode.com/posts', value);\n  }\n}\n"],"sourceRoot":""}